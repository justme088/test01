// server.js
const express = require('express');
const app = express();

// Middleware para procesar JSON
app.use(express.json());

// Almacenamiento temporal en memoria
let datos = [];

// Ruta para agregar datos (POST)
app.post('/addData', (req, res) => {
  const { tiempo, tempC, PPa, H } = req.body;
  
  // Validación básica de datos
  if (tiempo && tempC && PPa && H) {
    datos.push({ tiempo, tempC, PPa, H });
    res.status(200).json({ message: 'Datos agregados con éxito' });
  } else {
    res.status(400).json({ message: 'Faltan campos en el JSON' });
  }
});

// Ruta para obtener los datos acumulados en JSON (GET)
app.get('/getData', (req, res) => {
  res.status(200).json(datos);
});

// Ruta para limpiar los datos (GET)
app.get('/clearData', (req, res) => {
  datos = [];
  res.status(200).json({ message: 'Datos limpiados con éxito' });
});

// Servir una página HTML básica para pruebas
app.get('/', (req, res) => {
  res.send(`
    <html>
      <body>
        <h1>Aplicación de Almacenamiento Temporal</h1>
        <button onclick="agregarDatos()">Agregar Datos (ejemplo)</button>
        <button onclick="descargarDatos()">Descargar Datos</button>
        <button onclick="limpiarDatos()">Limpiar Datos</button>
        <script>
          async function agregarDatos() {
            const response = await fetch('/addData', {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ tiempo: '2024-11-12T10:00', tempC: 25, PPa: 1013, H: 60 })
            });
            const data = await response.json();
            alert(data.message);
          }

          async function descargarDatos() {
            const response = await fetch('/getData');
            const data = await response.json();
            alert(JSON.stringify(data, null, 2));
          }

          async function limpiarDatos() {
            const response = await fetch('/clearData');
            const data = await response.json();
            alert(data.message);
          }
        </script>
      </body>
    </html>
  `);
});

// Iniciar el servidor en Vercel
app.listen(3000, () => {
  console.log('Servidor iniciado en http://localhost:3000');
});

module.exports = app;
